bool isPresent = false;
    if (_products.length > 0) {
      for (int i = 0; i < _products.length; i++) {
        if (_products[i].id == products.id) {
          increaseQuantity(products);
          isPresent = true;
          break;
        } else {
          isPresent = false;
        }
        notifyListeners();
      }

      if (!isPresent) {
        _products.add(products);
      }
    } else {
      _products.add(products);
    }
    notifyListeners();

    Flushbar(
                    margin: EdgeInsets.all(8),
                     forwardAnimationCurve: Curves.fastLinearToSlowEaseIn,
                     icon: Icon(
                       Icons.info_outline,
                       color: Colors.blue,
                     ),
                     duration: Duration(milliseconds: 900),
                     message: 'item has been added to cart',
                   ).show(context);






class Body extends HookWidget {
  @override
  Widget build(BuildContext context) {
    final showFloatingNavbar =
        useAnimationController(duration: Duration(milliseconds: 10));
    final scrollController = useControllerForAnimation(showFloatingNavbar);
    return Stack(children: [
      Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.only(top: 130, left: 15),
            child: Text(
              "Women's Bag",
              style: GoogleFonts.nunito(
                  textStyle: TextStyle(color: Colors.black), fontSize: 36),
            ),
          ),
          Categories(),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 20),
              child: GridView.builder(
                controller: scrollController,
                itemCount: products.length,
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 2,
                    mainAxisSpacing: 20,
                    crossAxisSpacing: 20,
                    childAspectRatio: 0.65),
                itemBuilder: (context, index) => Itemcard(
                  product: products[index],
                  press: () => Navigator.push(
                    context,
                    PageRouteBuilder(
                      transitionDuration: const Duration(milliseconds: 200),
                      pageBuilder: (context, _, __) => DetailScreen(
                        product: products[index],
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),

      //Custom Bottom Navigation bar
      FloatingBottomNavBar(showFloatingNavbar: showFloatingNavbar),
    ]);
  }
}
